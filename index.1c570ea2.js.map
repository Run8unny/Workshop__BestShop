{"mappings":"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","sources":["<anon>","src/js/script.js"],"sourcesContent":["var $3fba0bda95caa784$exports = {};\nconst $3fba0bda95caa784$var$menuBurger = ()=>{\n    const btnNav = document.querySelector(\".burger__menu\");\n    const body = document.querySelector(\"body\");\n    btnNav.addEventListener(\"click\", ()=>body.classList.toggle(\"show-menu\"));\n};\n$3fba0bda95caa784$var$menuBurger();\nclass $3fba0bda95caa784$var$Calculator {\n    constructor(form, summary){\n        this.prices = {\n            products: 0.5,\n            orders: 0.4,\n            package: {\n                basic: 0,\n                professional: 25,\n                premium: 60\n            },\n            accounting: 25,\n            terminal: 5\n        };\n        this.form = {\n            products: form.querySelector(\"#products\"),\n            orders: form.querySelector(\"#orders\"),\n            package: form.querySelector(\"#package\"),\n            accounting: form.querySelector(\"#accounting\"),\n            terminal: form.querySelector(\"#terminal\")\n        };\n        this.summary = {\n            list: summary.querySelector(\"ul\"),\n            items: summary.querySelector(\"ul\").children,\n            total: {\n                container: summary.querySelector(\"#total-price\"),\n                price: summary.querySelector(\".total__price\")\n            }\n        };\n    }\n    handleInputs(e) {\n        const id = e.currentTarget.id;\n        const value = e.currentTarget.value;\n        const price = this.prices[id];\n        const totalPrice = (value * price).toFixed(2);\n        this.updateUISummary(id, `${value} * $ ${price}`, totalPrice, function(item, calc, total) {\n            if (value < 0) {\n                calc.innerHTML = null;\n                total.innerText = \"Value should be greater than 0\";\n            }\n            if (value.length === 0) item.classList.remove(\"open\");\n        });\n        this.updateTotalPrice();\n    }\n    updateUISummary(id, value, totalPrice, callback) {\n        const summary = this.summary.list.querySelector(`[data-id=${id}]`);\n        const itemCalc = summary.querySelector(\".item__calc\");\n        const itemPrice = summary.querySelector(\".item__price\");\n        summary.classList.add(\"open\");\n        if (itemCalc !== null) itemCalc.innerText = value;\n        itemPrice.innerText = `$${totalPrice}`;\n        if (typeof callback === \"function\") callback(summary, itemCalc, itemPrice);\n    }\n    handleSelect(e) {\n        this.form.package.querySelector(\".select__dropdown\").classList.toggle(\"open\");\n        const value = typeof e.target.dataset.value !== \"undefined\" ? e.target.dataset.value : \"\";\n        const text = typeof e.target.dataset.value !== \"undefined\" ? e.target.innerText : \"Choose package\";\n        if (value.length > 0) {\n            this.form.package.dataset.value = value;\n            this.form.package.querySelector(\".select__input\").innerText = text;\n            this.updateUISummary(\"package\", text, this.prices.package[value]);\n        }\n        this.updateTotalPrice();\n    }\n    handleCheckbox(e) {\n        const checkbox = e.currentTarget;\n        const id = checkbox.id;\n        const checked = e.currentTarget.checked;\n        this.updateUISummary(id, undefined, this.prices[id], function(item) {\n            if (!checked) item.classList.remove(\"open\");\n        });\n        this.updateTotalPrice();\n    }\n    handleListeners() {\n        // Inputs\n        this.form.products.addEventListener(\"change\", this.handleInputs.bind(this));\n        this.form.products.addEventListener(\"keyup\", this.handleInputs.bind(this));\n        this.form.orders.addEventListener(\"change\", this.handleInputs.bind(this));\n        this.form.orders.addEventListener(\"keyup\", this.handleInputs.bind(this));\n        // Select\n        this.form.package.addEventListener(\"click\", this.handleSelect.bind(this));\n        // Checkboxes\n        this.form.accounting.addEventListener(\"change\", this.handleCheckbox.bind(this));\n        this.form.terminal.addEventListener(\"change\", this.handleCheckbox.bind(this));\n    }\n    updateTotalPrice() {\n        const show = this.summary.list.querySelectorAll(\".open\").length > 0;\n        if (show) {\n            const productSum = this.form.products.value < 0 ? 0 : this.form.products.value * this.prices.products;\n            const ordersSum = this.form.orders.value < 0 ? 0 : this.form.orders.value * this.prices.orders;\n            const packagePrice = this.form.package.dataset.value.length === 0 ? 0 : this.prices.package[this.form.package.dataset.value];\n            const accounting = this.form.accounting.checked ? this.prices.accounting : 0;\n            const terminal = this.form.terminal.checked ? this.prices.terminal : 0;\n            this.summary.total.price.innerText = \"$\" + (productSum + ordersSum + packagePrice + accounting + terminal);\n            this.summary.total.container.classList.add(\"open\");\n        } else this.summary.total.container.classList.remove(\"open\");\n    }\n}\nconst $3fba0bda95caa784$var$form = document.querySelector(\".calc__form\");\nconst $3fba0bda95caa784$var$summary = document.querySelector(\".calc__summary\");\nconst $3fba0bda95caa784$var$calculator = new $3fba0bda95caa784$var$Calculator($3fba0bda95caa784$var$form, $3fba0bda95caa784$var$summary);\n$3fba0bda95caa784$var$calculator.handleListeners();\nconsole.log($3fba0bda95caa784$var$calculator);\n\n\n//# sourceMappingURL=index.1c570ea2.js.map\n","const menuBurger = () => {\n    const btnNav = document.querySelector(\".burger__menu\");\n    const body = document.querySelector(\"body\");\n\n    btnNav.addEventListener(\"click\", () =>  body.classList.toggle(\"show-menu\") )\n}\n\nmenuBurger();\n\nclass Calculator {\n    constructor(form, summary) {\n        this.prices = {\n            products: 0.5,\n            orders: 0.4,\n            package: {\n                basic: 0,\n                professional: 25,\n                premium: 60\n            },\n            accounting: 25,\n            terminal: 5\n        };\n\n        this.form = {\n            products: form.querySelector(\"#products\"),\n            orders: form.querySelector(\"#orders\"),\n            package: form.querySelector(\"#package\"),\n            accounting: form.querySelector(\"#accounting\"),\n            terminal: form.querySelector(\"#terminal\")\n        };\n\n        this.summary = {\n            list: summary.querySelector(\"ul\"),\n            items: summary.querySelector(\"ul\").children,\n            total: {\n                container: summary.querySelector(\"#total-price\"),\n                price: summary.querySelector(\".total__price\")\n            }\n        };\n    }\n\n    handleInputs(e) {\n        const id = e.currentTarget.id;\n        const value = e.currentTarget.value;\n        const price = this.prices[id];\n        const totalPrice = (value * price).toFixed(2);\n\n        this.updateUISummary(id, `${value} * $ ${price}`, totalPrice, function (item, calc, total) {\n            if (value < 0) {\n                calc.innerHTML = null;\n                total.innerText = \"Value should be greater than 0\";\n            }\n\n            if (value.length === 0) {\n                item.classList.remove(\"open\");\n            }\n        });\n\n        this.updateTotalPrice();\n    }\n\n    updateUISummary(id, value, totalPrice, callback){\n        const summary = this.summary.list.querySelector(`[data-id=${id}]`);\n        const itemCalc = summary.querySelector(\".item__calc\");\n        const itemPrice = summary.querySelector(\".item__price\");\n\n        summary.classList.add(\"open\");\n\n        if (itemCalc !== null) {\n            itemCalc.innerText = value;\n        }\n\n        itemPrice.innerText = `$${totalPrice}`;\n\n        if (typeof callback === \"function\") {\n            callback(summary, itemCalc, itemPrice);\n        }\n    }\n\n    handleSelect(e) {\n        this.form.package.querySelector('.select__dropdown').classList.toggle('open');\n\n        const value = typeof(e.target.dataset.value) !== \"undefined\" ? e.target.dataset.value : \"\";\n        const text = typeof(e.target.dataset.value) !== \"undefined\" ? e.target.innerText : \"Choose package\";\n\n        if (value.length > 0) {\n            this.form.package.dataset.value = value;\n            this.form.package.querySelector(\".select__input\").innerText = text;\n\n            this.updateUISummary(\"package\", text, this.prices.package[value]);\n        }\n\n        this.updateTotalPrice();\n    }\n\n    handleCheckbox(e) {\n        const checkbox = e.currentTarget;\n        const id = checkbox.id;\n        const checked = e.currentTarget.checked;\n\n        this.updateUISummary(id, undefined, this.prices[id], function (item) {\n            if (!checked) {\n                item.classList.remove(\"open\");\n            }\n        });\n\n        this.updateTotalPrice();\n    }\n\n    handleListeners() {\n        // Inputs\n        this.form.products.addEventListener(\"change\", this.handleInputs.bind(this));\n        this.form.products.addEventListener(\"keyup\", this.handleInputs.bind(this));\n        this.form.orders.addEventListener(\"change\", this.handleInputs.bind(this));\n        this.form.orders.addEventListener(\"keyup\", this.handleInputs.bind(this));\n\n        // Select\n        this.form.package.addEventListener(\"click\", this.handleSelect.bind(this));\n\n        // Checkboxes\n        this.form.accounting.addEventListener(\"change\", this.handleCheckbox.bind(this));\n        this.form.terminal.addEventListener(\"change\", this.handleCheckbox.bind(this));\n    }\n\n    updateTotalPrice() {\n        const show = this.summary.list.querySelectorAll(\".open\").length > 0;\n\n        if (show) {\n            const productSum = this.form.products.value < 0 ? 0 : this.form.products.value * this.prices.products;\n            const ordersSum = this.form.orders.value < 0 ? 0 : this.form.orders.value * this.prices.orders;\n            const packagePrice = this.form.package.dataset.value.length === 0 ? 0 : this.prices.package[this.form.package.dataset.value];\n            const accounting = this.form.accounting.checked ? this.prices.accounting : 0;\n            const terminal = this.form.terminal.checked ? this.prices.terminal : 0;\n\n            this.summary.total.price.innerText = \"$\" + (productSum + ordersSum + packagePrice + accounting + terminal);\n\n            this.summary.total.container.classList.add(\"open\");\n        } else {\n            this.summary.total.container.classList.remove(\"open\");\n        }\n    }\n}\n\nconst form = document.querySelector('.calc__form');\nconst summary = document.querySelector('.calc__summary');\nconst calculator = new Calculator(form, summary);\ncalculator.handleListeners();\nconsole.log(calculator);"],"names":["btnNav","document","querySelector","body","addEventListener","classList","toggle","$3fba0bda95caa784$var$form","$3fba0bda95caa784$var$summary","$3fba0bda95caa784$var$calculator","constructor","form","summary","prices","products","orders","package","basic","professional","premium","accounting","terminal","list","items","children","total","container","price","handleInputs","e","id","currentTarget","value","totalPrice","toFixed","updateUISummary","item","calc","innerHTML","innerText","length","remove","updateTotalPrice","callback","itemCalc","itemPrice","add","handleSelect","target","dataset","text","handleCheckbox","checkbox","checked","undefined","handleListeners","bind","querySelectorAll","productSum","ordersSum","packagePrice","console","log"],"version":3,"file":"index.1c570ea2.js.map"}